name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 17 for the build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      # Cache Maven dependencies to speed up the build
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build the project using Maven
      - name: Build with Maven
        run: mvn clean install --no-transfer-progress

      # Run tests using Maven
      - name: Test with Maven
        run: mvn test --no-transfer-progress

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Check out the code again
      - name: Checkout code
        uses: actions/checkout@v3

      # Create a .zip file of the application
      - name: Create application .zip
        run: zip -r application.zip .

      # Deploy to AWS Elastic Beanstalk
      - name: Deploy to AWS Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Upload the .zip file to S3
          aws s3 cp application.zip s3://${{ secrets.S3_BUCKET }}/application.zip

          # Create a new application version in Elastic Beanstalk
          aws elasticbeanstalk create-application-version \
            --application-name my-springboot-app \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket=${{ secrets.S3_BUCKET }},S3Key=application.zip

          # Update the environment to use the new version
          aws elasticbeanstalk update-environment \
            --application-name my-springboot-app \
            --environment-name my-env \
            --version-label ${{ github.sha }}

      # Clean up the .zip file after deployment
      - name: Clean up
        run: rm application.zip
